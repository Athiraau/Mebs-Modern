@model MVC_Project.Models.MenuModel.MenuListModel
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor httpContextAccessor

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>MEBS APPLICATION</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/Megadrop.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/index.css">
    <script src="~/js/projectscript.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/rollups/aes.js" integrity="sha256-/H4YS+7aYb9kJ5OKhFYPUjSJdrtV6AeyJOtTkw6X72o=" crossorigin="anonymous"></script>

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
    <link href="https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css" rel="stylesheet" />
</head>
<body>
    <header>
        <nav class="navbar">
            <div class="logo_item">
                <i class="bx bx-menu" id="sidebarOpen"></i>
                <img src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQfRDZab3WsjZsEqK6j3ysMXSKrsOStieYemw&usqp=CAU" alt="">
                <a href="#" style="text-decoration:none"> <h5 style="color:black ; padding:0; margin:0; letter-spacing:1px; font-size:2vw; " class="d-sm-none d-md-block d-none d-sm-block">MEBS APPLICATION</h5></a><label style="color:gray; font-size:100%;">|</label><h5 style="color:red; font-size:2vw; padding:0; margin:0; letter-spacing:2px;">OTHERS</h5>
            </div>
            <div class="navbar_content">
                <div onclick="loadDashBoard1()"> <a><i class='bx bx-home'></i></a></div>
                <i class='bx bx-sun' id="darkLight"></i>
                <i class='bx bx-bell'></i>
                <img src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQyu6SQca-TBrVXH71O_rfpKsGe1vxUiqLwPQ&usqp=CAU" alt="" class="profile" onclick="loadDashBoard1()" />
                <a style="color:black; font-size:12px;">@httpContextAccessor.HttpContext.Session.GetString("EmpName")</a> <label style="color:dimgrey">|</label> <a style="color:black; font-size:12px;">@httpContextAccessor.HttpContext.Session.GetString("BrName")</a>

                <a href="#" class="dropdown-toggle" data-bs-toggle="dropdown"></a>
                <div class="dropdown-menu dropdown-menu-end">
                    <a onclick="loadChangePW()" class="dropdown-item" style="cursor:pointer;"> Change Password <i class='bx bxs-lock-open'></i></a>
                    <div class="dropdown-divider"></div>
                    <div onclick="logout();"><a href="#" class="dropdown-item">Logout <i class='bx bx-log-out'></i></a></div>
                </div>
            </div>
        </nav>
    </header>
    <nav class="sidebar" style="height:100%">
        <div class="menu_content">
            <ul class="menu_items">
                <!-- duplicate or remove this li tag if you want to add or remove navlink with submenu -->
                <!-- start -->
                @foreach (var item in Model.M_NAME)
                {
                    <li class="item">
                        <div href="#" id=@Html.DisplayFor(modelItem => item.MENU_ID) class="nav_link" onclick="render(id);">
                            <span class="navlink_icon">
                                <i class='bx bx-grid-horizontal'></i>
                            </span>
                            <span class="navlink">@Html.DisplayFor(modelItem => item.MENU_NAME)</span>
                            <i class="bx bx-chevron-right arrow-left"></i>
                        </div>
                    </li>
                }
                <!-- end -->
            </ul>
            <!-- Sidebar Open / Close -->
             <div class="bottom_content">
            <div class="bottom expand_sidebar">
            <span style="font-size:12px"> Expand</span>
            <i class='bx bx-log-in'></i>
            </div>
            <div class="bottom collapse_sidebar">
            <span style="font-size:12px"> Collapse</span>
            <i class='bx bx-log-out'></i>
            </div>
            </div>
        </div>
    </nav>
    <div class="megadrop"> <div class="col"> @RenderBody()</div></div>
    <div class="megadrop1"><div class="col"> @RenderBody()</div></div>
    <div class="megadrop2"><div class="col"> @RenderBody()</div></div>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    @await RenderSectionAsync("Scripts", required: false)
    <script>
        function loadChangePW() {

            var baselink = '@ViewData["baseurl"]';

            document.location.href = baselink + "MaaPortal/changePassword";
        }
        function loadDashBoard1() {
            let id = '@ViewData["empCode"]';
            var ecode = encrypt(id);
            window.location.href = "../Home/Dashboard?empcode=" + ecode;
        }
    </script>
    <script>
        //--------------------------------------SUBMENU LOADING------------------------------------
        async function getChildMenuList() {

            var baselink = '@ViewData["baseurl"]';
            var a = @Model.EmpCode;
            try {
               
                var url = baselink + "MenuApi/api/MenuApi/GetMenuData/GETCHILDMENU_MVC1/" + a + "/1";

                const response = await fetch(url);

                const data = await response.json();
                const data1 = JSON.stringify(data);
                // let data = await response.content.ReadAsStringAsync();
                var data2 = data1.replace(/{"MenuResDto":/g, "");
                data2 = data2.replace(/}]}/g, "}]");
                data2 = data2.replace(/""/g, "\"");
                const data3 = JSON.parse(data2);
                return data3;
            } catch (error) {
                console.error('Error fetching data:', error);
            }
        }
        async function getSubMenuList(divider) {
            //  
            var baselink = '@ViewData["baseurl"]';
            try {
                
                var a = @Model.EmpCode;
                var url = baselink +  "MenuApi/api/MenuApi/GetMenuData/GETMAINMENU_MVC2/" + a + "/" + divider;
                const response = await fetch(url);
                const data = await response.json();
                const data1 = JSON.stringify(data);
                var data2 = data1.replace(/{"MenuResDto":/g, "");
                data2 = data2.replace(/}]}/g, "}]");
                data2 = data2.replace(/""/g, "\"");
                const data3 = JSON.parse(data2);
                return data3;
            } catch (error) {
                console.error('Error fetching data:', error);
            }
        }
        async function renderData(id) {
            const divider = 1;
            var emp = '@ViewData["empCode"]';
            var ecode = encrypt(emp);
            const container = document.querySelector('.megadrop');
            const data = await getSubMenuList(divider);
            const childdata = await getChildMenuList();
            ;
            if (!data) {
                return;
            }
            let idn = id.toString();
            data.forEach(item => {
                if (item.MAIN_MENU_ID == idn) {
                    const colDiv = document.createElement('div');
                    colDiv.className = "col";
                    const ulcard = document.createElement('ul');
                    ulcard.className = "mainmenu-list";
                    const card = document.createElement('li');
                    //card.className = "subdropbtn";
                    card.id = item.SUBMENU_ID;
                    //  card.classList.add('card');
                    // divID = card.id.toString();
                    //  
                    let childID = card.id.toString();
                    var parent = document.createElement('a');
                    // parent.id = "graph";
                    parent.className = "subdropbtn";
                    parent.href = item.LINK + ecode;
                    parent.textContent = item.SUBMENU_NAME;
                    //  parent.target = "_blank";
                    var child = document.createElement("ul");
                    child.id = "titleID";
                    child.className = "submenu-list";
                    //--------------child menu----------------------
                    if (item.LINK == null || item.LINK == "#") {
                        // parent.href = null;
                        //  const childdata = await getChildMenuList(divID);
                        parent.textContent = parent.textContent + " >";
                        //const Cdiv = document.createElement('div');
                        //Cdiv.className = "dropdown-content";
                        childdata.forEach(items => {
                            if (items.SUBMENU_ID == childID) {
                                const sublink = document.createElement("a");
                                sublink.href = items.LINK + ecode;;
                                //   sublink.target = "_blank";
                                sublink.textContent = items.CHILDMENU_NAME;
                                child.appendChild(sublink);
                            }
                        });

                        // child.appendChild(Cdiv);
                    }
                    //----------------------------------------------

                    parent.appendChild(child);
                    card.appendChild(parent);
                    ulcard.appendChild(card);
                    colDiv.appendChild(ulcard);
                    // colDiv.appendChild(ulcard);
                    container.appendChild(colDiv);
                }
            });
        }
        async function renderData1(id) {
            const divider = 2;
            var emp = @Model.EmpCode;
            var ecode = encrypt(emp);
            const container = document.querySelector('.megadrop1');
            const data = await getSubMenuList(divider);
            const childdata = await getChildMenuList();
            ;
            if (!data) {
                return;
            }
            let idn = id.toString();
            data.forEach(item => {
                if (item.MAIN_MENU_ID == idn) {
                    const colDiv = document.createElement('div');
                    colDiv.className = "col";
                    const ulcard = document.createElement('ul');
                    ulcard.className = "mainmenu-list";
                    const card = document.createElement('li');
                    //card.className = "subdropbtn";
                    card.id = item.SUBMENU_ID;
                    //  card.classList.add('card');
                    // divID = card.id.toString();
                    //  
                    let childID = card.id.toString();
                    var parent = document.createElement('a');
                    // parent.id = "graph";
                    parent.className = "subdropbtn";
                    parent.href = item.LINK + ecode;
                    parent.textContent = item.SUBMENU_NAME;
                    //  parent.target = "_blank";

                    var child = document.createElement("ul");
                    child.id = "titleID";
                    child.className = "submenu-list";
                    // child.textContent = item.SUBMENU_NAME;

                    // 

                    //--------------child menu----------------------
                    if (item.LINK == null) {
                        // parent.href = null;
                        //  const childdata = await getChildMenuList(divID);
                        parent.textContent = parent.textContent + " >";
                        //const Cdiv = document.createElement('div');
                        //Cdiv.className = "dropdown-content";
                        childdata.forEach(items => {

                            if (items.SUBMENU_ID == childID) {
                                const sublink = document.createElement("a");
                                sublink.href = items.LINK;
                                //   sublink.target = "_blank";
                                sublink.textContent = items.CHILDMENU_NAME;
                                child.appendChild(sublink);
                            }
                        });
                    }

                    //----------------------------------------------

                    parent.appendChild(child);
                    card.appendChild(parent);
                    ulcard.appendChild(card);
                    colDiv.appendChild(ulcard);
                    // colDiv.appendChild(ulcard);
                    container.appendChild(colDiv);
                }
            });
        }
        async function renderData2(id) {
            const divider = 3;

            var emp = @Model.EmpCode;
            var ecode = encrypt(emp);
            const container = document.querySelector('.megadrop2');

            const data = await getSubMenuList(divider);
            const childdata = await getChildMenuList();

            ;

            if (!data) {
                return;
            }

            let idn = id.toString();
            data.forEach(item => {
                if (item.MAIN_MENU_ID == idn) {

                    const colDiv = document.createElement('div');
                    colDiv.className = "col";

                    const ulcard = document.createElement('ul');
                    ulcard.className = "mainmenu-list";

                    const card = document.createElement('li');

                    //card.className = "subdropbtn";
                    card.id = item.SUBMENU_ID;
                    //  card.classList.add('card');
                    // divID = card.id.toString();
                    //  
                    let childID = card.id.toString();
                    var parent = document.createElement('a');
                    // parent.id = "graph";
                    parent.className = "subdropbtn";
                    parent.href = item.LINK + ecode;
                    parent.textContent = item.SUBMENU_NAME;
                    //  parent.target = "_blank";

                    var child = document.createElement("ul");
                    child.id = "titleID";
                    child.className = "submenu-list";
                    // child.textContent = item.SUBMENU_NAME;

                    // 

                    //--------------child menu----------------------
                    if (item.LINK == null) {
                        // parent.href = null;
                        //  const childdata = await getChildMenuList(divID);
                        parent.textContent = parent.textContent + " >";
                        //const Cdiv = document.createElement('div');
                        //Cdiv.className = "dropdown-content";
                        childdata.forEach(items => {

                            if (items.SUBMENU_ID == childID) {
                                const sublink = document.createElement("a");
                                sublink.href = items.LINK;
                                //   sublink.target = "_blank";
                                sublink.textContent = items.CHILDMENU_NAME;
                                child.appendChild(sublink);
                            }
                        });
                    }
                    //----------------------------------------------

                    parent.appendChild(child);
                    card.appendChild(parent);
                    ulcard.appendChild(card);
                    colDiv.appendChild(ulcard);
                    // colDiv.appendChild(ulcard);
                    container.appendChild(colDiv);
                }
            });
        }
        // Call the renderData function to display data
        function render(id) {
            $("ul.mainmenu-list").remove();
            $("div.dcontainer1").remove();
            $("div.dcontainer2").remove();
            $("div.pagecontiner").remove();

            renderData(id);
            renderData1(id);
            renderData2(id);
        }
        function cleardata() {
            $("div.dropdown").remove();
        }

        //-----------------------------------------------------------------------------------------

        const body = document.querySelector("body");
        const darkLight = document.querySelector("#darkLight");
        const sidebar = document.querySelector(".sidebar");
        const submenuItems = document.querySelectorAll(".submenu_item");
        const sidebarOpen = document.querySelector("#sidebarOpen");
        const sidebarClose = document.querySelector(".collapse_sidebar");
        sidebarExpand = document.querySelector(".expand_sidebar");
        sidebarOpen.addEventListener("click", () => sidebar.classList.toggle("close"));
        sidebarClose.addEventListener("click", () => {
            sidebar.classList.add("close", "hoverable");
        });
        sidebarExpand.addEventListener("click", () => {
            sidebar.classList.remove("close", "hoverable");
        });
        sidebar.addEventListener("mouseenter", () => {
            if (sidebar.classList.contains("hoverable")) {
                sidebar.classList.remove("close");
            }
        });
        sidebar.addEventListener("mouseleave", () => {
            if (sidebar.classList.contains("hoverable")) {
                sidebar.classList.add("close");
            }
        });
        darkLight.addEventListener("click", () => {
            body.classList.toggle("dark");
            if (body.classList.contains("dark")) {
                document.setI
                darkLight.classList.replace("bx-sun", "bx-moon");
            } else {

                darkLight.classList.replace("bx-moon", "bx-sun");
            }
        });
        submenuItems.forEach((item, index) => {
            item.addEventListener("click", () => {
                item.classList.toggle("show_submenu");
                submenuItems.forEach((item2, index2) => {
                    if (index !== index2) {
                        item2.classList.remove("show_submenu");
                    }
                });
            });
        });
        if (window.innerWidth < 768) {
            sidebar.classList.add("close");
        } else {
            sidebar.classList.remove("close");
        }

        function getID(id) {

            $.ajax({
                url: '@Url.Action("Index")',
                type: 'POST',
                cache: false,
                data: { datas: id }
            }).done(function () {
            });
        }

        //-------------  Encryption ----------------------------
        function MenuPageLoader() {
            var id = @ViewData["empCode"];

            var code = encrypt(id);
            window.location.href = "/Loans/Index?datas=" + code;
        }

        function logout() {
            var baselink = '@ViewData["baseurl"]';
            var domainurl = baselink + "MebsApp/";

            window.location.href = domainurl + "Home/Index";
            // document.location.href = domainurl;
        }

        function loadloginPage() {
            var baselink = '@ViewData["baseurl"]';
            var domainurl = baselink + "/MebsApp";

            document.location.href = domainurl;
        }

    </script>
    <script src="~/js/projectscript.js"></script>
  
</body>
</html>
